;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 2015-07-14 ¿ÀÀü 10:54:06
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x289F      	GOTO       159
_Interrupt:
0x0004	0x00DF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00B9      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00B4      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0850      	MOVF       R0, 0
0x000C	0x00A0      	MOVWF      32
;12f675-PwmFet.mpas,77 :: 		begin
;12f675-PwmFet.mpas,78 :: 		if T0IF_bit=1 then begin
0x000D	0x1D0B      	BTFSS      T0IF_bit, BitPos(T0IF_bit+0)
0x000E	0x2824      	GOTO       L__Interrupt2
;12f675-PwmFet.mpas,80 :: 		if PWM_SIG=1 then begin
0x000F	0x1283      	BCF        STATUS, 5
0x0010	0x1C05      	BTFSS      GP0_bit, BitPos(GP0_bit+0)
0x0011	0x2820      	GOTO       L__Interrupt5
;12f675-PwmFet.mpas,81 :: 		ON_PWM:=VOL_PWM;
0x0012	0x0836      	MOVF       _VOL_PWM, 0
0x0013	0x00B5      	MOVWF      _ON_PWM
;12f675-PwmFet.mpas,82 :: 		if ON_PWM=0 then
0x0014	0x0836      	MOVF       _VOL_PWM, 0
0x0015	0x3A00      	XORLW      0
0x0016	0x1D03      	BTFSS      STATUS, 2
0x0017	0x281B      	GOTO       L__Interrupt8
;12f675-PwmFet.mpas,83 :: 		TMR0:=ON_PWM
0x0018	0x0835      	MOVF       _ON_PWM, 0
0x0019	0x0081      	MOVWF      TMR0
0x001A	0x281F      	GOTO       L__Interrupt9
;12f675-PwmFet.mpas,84 :: 		else begin
L__Interrupt8:
;12f675-PwmFet.mpas,85 :: 		TMR0:=PWM_MAX-ON_PWM;
0x001B	0x0835      	MOVF       _ON_PWM, 0
0x001C	0x3CFF      	SUBLW      255
0x001D	0x0081      	MOVWF      TMR0
;12f675-PwmFet.mpas,86 :: 		PWM_SIG:=0;
0x001E	0x1005      	BCF        GP0_bit, BitPos(GP0_bit+0)
;12f675-PwmFet.mpas,87 :: 		end;
L__Interrupt9:
;12f675-PwmFet.mpas,88 :: 		end else begin
0x001F	0x2823      	GOTO       L__Interrupt6
L__Interrupt5:
;12f675-PwmFet.mpas,89 :: 		TMR0:=ON_PWM;
0x0020	0x0835      	MOVF       _ON_PWM, 0
0x0021	0x0081      	MOVWF      TMR0
;12f675-PwmFet.mpas,90 :: 		PWM_SIG:=1;
0x0022	0x1405      	BSF        GP0_bit, BitPos(GP0_bit+0)
;12f675-PwmFet.mpas,91 :: 		end;
L__Interrupt6:
;12f675-PwmFet.mpas,92 :: 		T0IF_bit:=0;
0x0023	0x110B      	BCF        T0IF_bit, BitPos(T0IF_bit+0)
;12f675-PwmFet.mpas,93 :: 		end;
L__Interrupt2:
0x0024	0x1283      	BCF        STATUS, 5
;12f675-PwmFet.mpas,94 :: 		if T1IF_bit=1 then begin
0x0025	0x1C0C      	BTFSS      T1IF_bit, BitPos(T1IF_bit+0)
0x0026	0x282D      	GOTO       L__Interrupt11
;12f675-PwmFet.mpas,95 :: 		Inc(TICK_1000);
0x0027	0x0AB3      	INCF       _TICK_1000, 1
;12f675-PwmFet.mpas,96 :: 		TMR1L:=TMR1L_LOAD;
0x0028	0x3038      	MOVLW      56
0x0029	0x008E      	MOVWF      TMR1L
;12f675-PwmFet.mpas,97 :: 		TMR1H:=TMR1H_LOAD;
0x002A	0x30FC      	MOVLW      252
0x002B	0x008F      	MOVWF      TMR1H
;12f675-PwmFet.mpas,98 :: 		T1IF_bit:=0;
0x002C	0x100C      	BCF        T1IF_bit, BitPos(T1IF_bit+0)
;12f675-PwmFet.mpas,99 :: 		end;
L__Interrupt11:
;12f675-PwmFet.mpas,100 :: 		end;
L_end_Interrupt:
L__Interrupt99:
0x002D	0x0820      	MOVF       32, 0
0x002E	0x00D0      	MOVWF      R0
0x002F	0x0834      	MOVF       ___savePCLATH, 0
0x0030	0x008A      	MOVWF      PCLATH
0x0031	0x0E39      	SWAPF      ___saveSTATUS, 0
0x0032	0x0083      	MOVWF      STATUS
0x0033	0x0EDF      	SWAPF      R15, 1
0x0034	0x0E5F      	SWAPF      R15, 0
0x0035	0x0009      	RETFIE
; end of _Interrupt
_Delay_22us:
;__Lib_Delays.mpas,39 :: 		begin
;__Lib_Delays.mpas,40 :: 		Delay_us(22);
0x0036	0x3007      	MOVLW      7
0x0037	0x1283      	BCF        STATUS, 5
0x0038	0x00DD      	MOVWF      R13
L__Delay_22us5:
0x0039	0x0BDD      	DECFSZ     R13, 1
0x003A	0x2839      	GOTO       L__Delay_22us5
;__Lib_Delays.mpas,41 :: 		end;
L_end_Delay_22us:
0x003B	0x0008      	RETURN
; end of _Delay_22us
_Delay_10ms:
;__Lib_Delays.mpas,84 :: 		begin
;__Lib_Delays.mpas,85 :: 		Delay_ms(10);
0x003C	0x300D      	MOVLW      13
0x003D	0x1283      	BCF        STATUS, 5
0x003E	0x00DC      	MOVWF      R12
0x003F	0x30FB      	MOVLW      251
0x0040	0x00DD      	MOVWF      R13
L__Delay_10ms23:
0x0041	0x0BDD      	DECFSZ     R13, 1
0x0042	0x2841      	GOTO       L__Delay_10ms23
0x0043	0x0BDC      	DECFSZ     R12, 1
0x0044	0x2841      	GOTO       L__Delay_10ms23
0x0045	0x0000      	NOP
0x0046	0x0000      	NOP
;__Lib_Delays.mpas,86 :: 		end;
L_end_Delay_10ms:
0x0047	0x0008      	RETURN
; end of _Delay_10ms
_Delay1ms:
;12f675-PwmFet.mpas,105 :: 		begin
;12f675-PwmFet.mpas,106 :: 		if limit>0 then begin
0x0048	0x1283      	BCF        STATUS, 5
0x0049	0x083D      	MOVF       FARG_Delay1ms_limit, 0
0x004A	0x3C00      	SUBLW      0
0x004B	0x1803      	BTFSC      STATUS, 0
0x004C	0x2869      	GOTO       L__Delay1ms15
;12f675-PwmFet.mpas,107 :: 		ts:=TICK_1000;
0x004D	0x0833      	MOVF       _TICK_1000, 0
0x004E	0x00D2      	MOVWF      R2
;12f675-PwmFet.mpas,108 :: 		if t<=ts then
0x004F	0x083C      	MOVF       FARG_Delay1ms_t, 0
0x0050	0x0084      	MOVWF      FSR
0x0051	0x0800      	MOVF       INDF, 0
0x0052	0x0233      	SUBWF      _TICK_1000, 0
0x0053	0x1C03      	BTFSS      STATUS, 0
0x0054	0x285A      	GOTO       L__Delay1ms18
;12f675-PwmFet.mpas,109 :: 		ts:=ts-t
0x0055	0x083C      	MOVF       FARG_Delay1ms_t, 0
0x0056	0x0084      	MOVWF      FSR
0x0057	0x0800      	MOVF       INDF, 0
0x0058	0x02D2      	SUBWF      R2, 1
0x0059	0x2862      	GOTO       L__Delay1ms19
;12f675-PwmFet.mpas,110 :: 		else
L__Delay1ms18:
;12f675-PwmFet.mpas,111 :: 		ts:=255-t+1+ts;
0x005A	0x083C      	MOVF       FARG_Delay1ms_t, 0
0x005B	0x0084      	MOVWF      FSR
0x005C	0x0800      	MOVF       INDF, 0
0x005D	0x3CFF      	SUBLW      255
0x005E	0x00D0      	MOVWF      R0
0x005F	0x0AD0      	INCF       R0, 1
0x0060	0x0850      	MOVF       R0, 0
0x0061	0x07D2      	ADDWF      R2, 1
L__Delay1ms19:
;12f675-PwmFet.mpas,112 :: 		Result:=ts>=limit;
0x0062	0x083D      	MOVF       FARG_Delay1ms_limit, 0
0x0063	0x0252      	SUBWF      R2, 0
0x0064	0x30FF      	MOVLW      255
0x0065	0x1C03      	BTFSS      STATUS, 0
0x0066	0x3000      	MOVLW      0
0x0067	0x00D1      	MOVWF      R1
;12f675-PwmFet.mpas,113 :: 		end else
0x0068	0x286B      	GOTO       L__Delay1ms16
L__Delay1ms15:
;12f675-PwmFet.mpas,114 :: 		Result:=True;
0x0069	0x30FF      	MOVLW      255
0x006A	0x00D1      	MOVWF      R1
L__Delay1ms16:
;12f675-PwmFet.mpas,115 :: 		if Result then
0x006B	0x0851      	MOVF       R1, 0
0x006C	0x1903      	BTFSC      STATUS, 2
0x006D	0x2872      	GOTO       L__Delay1ms21
;12f675-PwmFet.mpas,116 :: 		t:=TICK_1000;
0x006E	0x083C      	MOVF       FARG_Delay1ms_t, 0
0x006F	0x0084      	MOVWF      FSR
0x0070	0x0833      	MOVF       _TICK_1000, 0
0x0071	0x0080      	MOVWF      INDF
L__Delay1ms21:
;12f675-PwmFet.mpas,117 :: 		end;
0x0072	0x0851      	MOVF       R1, 0
0x0073	0x00D0      	MOVWF      R0
L_end_Delay1ms:
0x0074	0x0008      	RETURN
; end of _Delay1ms
_ADC_Read:
;__Lib_ADC_A_E.mpas,60 :: 		
;__Lib_ADC_A_E.mpas,61 :: 		
0x0075	0x30C3      	MOVLW      195
0x0076	0x1283      	BCF        STATUS, 5
0x0077	0x059F      	ANDWF      ADCON0, 1
;__Lib_ADC_A_E.mpas,66 :: 		
0x0078	0x30F0      	MOVLW      240
0x0079	0x059F      	ANDWF      ADCON0, 1
;__Lib_ADC_A_E.mpas,67 :: 		
0x007A	0x30F0      	MOVLW      240
0x007B	0x1683      	BSF        STATUS, 5
0x007C	0x049F      	IORWF      ANSEL, 1
;__Lib_ADC_A_E.mpas,68 :: 		
0x007D	0x1283      	BCF        STATUS, 5
0x007E	0x179F      	BSF        ADCON0, 7
;__Lib_ADC_A_E.mpas,69 :: 		
0x007F	0x083C      	MOVF       FARG_ADC_Read_channel, 0
0x0080	0x00D0      	MOVWF      R0
0x0081	0x0DD0      	RLF        R0, 1
0x0082	0x1050      	BCF        R0, 0
0x0083	0x0DD0      	RLF        R0, 1
0x0084	0x1050      	BCF        R0, 0
0x0085	0x0850      	MOVF       R0, 0
0x0086	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_A_E.mpas,72 :: 		
0x0087	0x141F      	BSF        ADCON0, 0
;__Lib_ADC_A_E.mpas,75 :: 		
0x0088	0x2036      	CALL       _Delay_22us
;__Lib_ADC_A_E.mpas,78 :: 		
0x0089	0x149F      	BSF        ADCON0, 1
;__Lib_ADC_A_E.mpas,81 :: 		
L__ADC_Read9:
0x008A	0x1C9F      	BTFSS      ADCON0, 1
0x008B	0x288E      	GOTO       L__ADC_Read10
0x008C	0x0000      	NOP
0x008D	0x288A      	GOTO       L__ADC_Read9
L__ADC_Read10:
;__Lib_ADC_A_E.mpas,84 :: 		
0x008E	0x101F      	BCF        ADCON0, 0
;__Lib_ADC_A_E.mpas,87 :: 		
0x008F	0x081E      	MOVF       ADRESH, 0
0x0090	0x00D1      	MOVWF      R0+1
0x0091	0x01D0      	CLRF       R0
0x0092	0x1683      	BSF        STATUS, 5
0x0093	0x081E      	MOVF       ADRESL, 0
0x0094	0x0450      	IORWF      R0, 0
0x0095	0x00BD      	MOVWF      ADC_Read_local_result
0x0096	0x0851      	MOVF       R0+1, 0
0x0097	0x00BE      	MOVWF      ADC_Read_local_result+1
0x0098	0x3000      	MOVLW      0
0x0099	0x04BE      	IORWF      ADC_Read_local_result+1, 1
;__Lib_ADC_A_E.mpas,89 :: 		
0x009A	0x083D      	MOVF       ADC_Read_local_result, 0
0x009B	0x00D0      	MOVWF      R0
0x009C	0x083E      	MOVF       ADC_Read_local_result+1, 0
0x009D	0x00D1      	MOVWF      R0+1
L_end_ADC_Read:
0x009E	0x0008      	RETURN
; end of _ADC_Read
_main:
;12f675-PwmFet.mpas,119 :: 		begin
;12f675-PwmFet.mpas,120 :: 		CMCON:=7;
0x009F	0x3007      	MOVLW      7
0x00A0	0x1283      	BCF        STATUS, 5
0x00A1	0x0099      	MOVWF      CMCON
;12f675-PwmFet.mpas,121 :: 		ANSEL:=%00000010;
0x00A2	0x3002      	MOVLW      2
0x00A3	0x1683      	BSF        STATUS, 5
0x00A4	0x009F      	MOVWF      ANSEL
;12f675-PwmFet.mpas,123 :: 		TRISIO0_bit:=0;
0x00A5	0x1005      	BCF        TRISIO0_bit, BitPos(TRISIO0_bit+0)
;12f675-PwmFet.mpas,124 :: 		TRISIO1_bit:=1;
0x00A6	0x1485      	BSF        TRISIO1_bit, BitPos(TRISIO1_bit+0)
;12f675-PwmFet.mpas,125 :: 		TRISIO2_bit:=0;
0x00A7	0x1105      	BCF        TRISIO2_bit, BitPos(TRISIO2_bit+0)
;12f675-PwmFet.mpas,126 :: 		TRISIO5_bit:=0;  // Sig_VSE
0x00A8	0x1285      	BCF        TRISIO5_bit, BitPos(TRISIO5_bit+0)
;12f675-PwmFet.mpas,127 :: 		LED1:=0;
0x00A9	0x1283      	BCF        STATUS, 5
0x00AA	0x1105      	BCF        GP2_bit, BitPos(GP2_bit+0)
;12f675-PwmFet.mpas,128 :: 		PWM_SIG:=1;
0x00AB	0x1405      	BSF        GP0_bit, BitPos(GP0_bit+0)
;12f675-PwmFet.mpas,129 :: 		LED1_tm:=250;
0x00AC	0x30FA      	MOVLW      250
0x00AD	0x00BA      	MOVWF      _LED1_tm
;12f675-PwmFet.mpas,130 :: 		LED1_Toggle:=True;
0x00AE	0x30FF      	MOVLW      255
0x00AF	0x00B8      	MOVWF      _LED1_Toggle
;12f675-PwmFet.mpas,131 :: 		ON_PWM:=0;
0x00B0	0x01B5      	CLRF       _ON_PWM
;12f675-PwmFet.mpas,132 :: 		VOL_PWM:=0;
0x00B1	0x01B6      	CLRF       _VOL_PWM
;12f675-PwmFet.mpas,133 :: 		out_short:=False;
0x00B2	0x01B7      	CLRF       _out_short
;12f675-PwmFet.mpas,134 :: 		short_count:=cShort_Recover*2;
0x00B3	0x3038      	MOVLW      56
0x00B4	0x00A8      	MOVWF      _short_count
;12f675-PwmFet.mpas,135 :: 		short_check:=False;
0x00B5	0x01A7      	CLRF       _short_check
;12f675-PwmFet.mpas,136 :: 		TICK_1000:=0;
0x00B6	0x01B3      	CLRF       _TICK_1000
;12f675-PwmFet.mpas,137 :: 		LED_TMCount:=0;
0x00B7	0x01AA      	CLRF       _LED_TMCount
;12f675-PwmFet.mpas,138 :: 		VSE_LO_HIT:=0;
0x00B8	0x01A9      	CLRF       _VSE_LO_HIT
;12f675-PwmFet.mpas,140 :: 		OPTION_REG:=%01010001;        // ~1KHz @ 4MHz, enable weak pull-up
0x00B9	0x3051      	MOVLW      81
0x00BA	0x1683      	BSF        STATUS, 5
0x00BB	0x0081      	MOVWF      OPTION_REG
;12f675-PwmFet.mpas,142 :: 		WPU4_bit:=1;
0x00BC	0x1615      	BSF        WPU4_bit, BitPos(WPU4_bit+0)
;12f675-PwmFet.mpas,144 :: 		TMR0IE_bit:=1;
0x00BD	0x168B      	BSF        TMR0IE_bit, BitPos(TMR0IE_bit+0)
;12f675-PwmFet.mpas,145 :: 		PEIE_bit:=1;
0x00BE	0x170B      	BSF        PEIE_bit, BitPos(PEIE_bit+0)
;12f675-PwmFet.mpas,146 :: 		TMR1CS_bit:=0;
0x00BF	0x1283      	BCF        STATUS, 5
0x00C0	0x1090      	BCF        TMR1CS_bit, BitPos(TMR1CS_bit+0)
;12f675-PwmFet.mpas,147 :: 		TMR1IE_bit:=1;
0x00C1	0x1683      	BSF        STATUS, 5
0x00C2	0x140C      	BSF        TMR1IE_bit, BitPos(TMR1IE_bit+0)
;12f675-PwmFet.mpas,148 :: 		TMR1L:=TMR1L_LOAD;
0x00C3	0x3038      	MOVLW      56
0x00C4	0x1283      	BCF        STATUS, 5
0x00C5	0x008E      	MOVWF      TMR1L
;12f675-PwmFet.mpas,149 :: 		TMR1H:=TMR1H_LOAD;
0x00C6	0x30FC      	MOVLW      252
0x00C7	0x008F      	MOVWF      TMR1H
;12f675-PwmFet.mpas,150 :: 		TMR1ON_bit:=1;
0x00C8	0x1410      	BSF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;12f675-PwmFet.mpas,151 :: 		GIE_bit:=1;      // enable Interrupt
0x00C9	0x178B      	BSF        GIE_bit, BitPos(GIE_bit+0)
;12f675-PwmFet.mpas,153 :: 		LED1_Timer:=TICK_1000;
0x00CA	0x01AE      	CLRF       _LED1_Timer
;12f675-PwmFet.mpas,154 :: 		ADC_Timer:=TICK_1000;
0x00CB	0x01B2      	CLRF       _ADC_Timer
;12f675-PwmFet.mpas,155 :: 		short_Timer:=TICK_1000;
0x00CC	0x01B1      	CLRF       _short_Timer
;12f675-PwmFet.mpas,156 :: 		VSE_Timer:=TICK_1000;
0x00CD	0x01AD      	CLRF       _VSE_Timer
;12f675-PwmFet.mpas,157 :: 		VSE_Lo_Reset:=0;
0x00CE	0x01AB      	CLRF       _VSE_Lo_Reset
;12f675-PwmFet.mpas,158 :: 		Sig_VSE:=0;
0x00CF	0x1285      	BCF        GP5_bit, BitPos(GP5_bit+0)
;12f675-PwmFet.mpas,159 :: 		VSE_CONN:=False;
0x00D0	0x01AC      	CLRF       _VSE_CONN
;12f675-PwmFet.mpas,161 :: 		Delay_10ms;
0x00D1	0x203C      	CALL       _Delay_10ms
;12f675-PwmFet.mpas,163 :: 		if VOut5=0 then begin
0x00D2	0x1985      	BTFSC      GP3_bit, BitPos(GP3_bit+0)
0x00D3	0x28DD      	GOTO       L__main25
;12f675-PwmFet.mpas,164 :: 		vTarget:=c051;
0x00D4	0x3029      	MOVLW      41
0x00D5	0x00AF      	MOVWF      _vTarget
0x00D6	0x3001      	MOVLW      1
0x00D7	0x00B0      	MOVWF      _vTarget+1
;12f675-PwmFet.mpas,165 :: 		VSE_HI:=c051;
0x00D8	0x3029      	MOVLW      41
0x00D9	0x00A3      	MOVWF      _VSE_HI
0x00DA	0x3001      	MOVLW      1
0x00DB	0x00A4      	MOVWF      _VSE_HI+1
;12f675-PwmFet.mpas,166 :: 		end else begin
0x00DC	0x28E5      	GOTO       L__main26
L__main25:
;12f675-PwmFet.mpas,167 :: 		vTarget:=c138;
0x00DD	0x3023      	MOVLW      35
0x00DE	0x00AF      	MOVWF      _vTarget
0x00DF	0x3003      	MOVLW      3
0x00E0	0x00B0      	MOVWF      _vTarget+1
;12f675-PwmFet.mpas,168 :: 		VSE_HI:=c138;
0x00E1	0x3023      	MOVLW      35
0x00E2	0x00A3      	MOVWF      _VSE_HI
0x00E3	0x3003      	MOVLW      3
0x00E4	0x00A4      	MOVWF      _VSE_HI+1
;12f675-PwmFet.mpas,169 :: 		end;
L__main26:
;12f675-PwmFet.mpas,171 :: 		while True do begin
L__main28:
;12f675-PwmFet.mpas,183 :: 		if Delay1ms(VSE_Timer,VSE_CHECK_INTERVAL) then begin
0x00E5	0x302D      	MOVLW      _VSE_Timer
0x00E6	0x00BC      	MOVWF      FARG_Delay1ms_t
0x00E7	0x307D      	MOVLW      125
0x00E8	0x00BD      	MOVWF      FARG_Delay1ms_limit
0x00E9	0x2048      	CALL       _Delay1ms
0x00EA	0x0850      	MOVF       R0, 0
0x00EB	0x1903      	BTFSC      STATUS, 2
0x00EC	0x28FB      	GOTO       L__main33
;12f675-PwmFet.mpas,184 :: 		VSE_CONN:=VSE_LO_HIT<VSE_LO_HIT_LIMIT;
0x00ED	0x3008      	MOVLW      8
0x00EE	0x0229      	SUBWF      _VSE_LO_HIT, 0
0x00EF	0x30FF      	MOVLW      255
0x00F0	0x1803      	BTFSC      STATUS, 0
0x00F1	0x3000      	MOVLW      0
0x00F2	0x00AC      	MOVWF      _VSE_CONN
;12f675-PwmFet.mpas,185 :: 		VSE_LO_HIT:=0;
0x00F3	0x01A9      	CLRF       _VSE_LO_HIT
;12f675-PwmFet.mpas,186 :: 		Inc(VSE_Lo_Reset);
0x00F4	0x0AAB      	INCF       _VSE_Lo_Reset, 1
;12f675-PwmFet.mpas,187 :: 		if VSE_Lo_Reset>31 then begin
0x00F5	0x082B      	MOVF       _VSE_Lo_Reset, 0
0x00F6	0x3C1F      	SUBLW      31
0x00F7	0x1803      	BTFSC      STATUS, 0
0x00F8	0x28FB      	GOTO       L__main36
;12f675-PwmFet.mpas,188 :: 		VSE_CONN:=False;
0x00F9	0x01AC      	CLRF       _VSE_CONN
;12f675-PwmFet.mpas,189 :: 		VSE_Lo_Reset:=0;
0x00FA	0x01AB      	CLRF       _VSE_Lo_Reset
;12f675-PwmFet.mpas,190 :: 		end;
L__main36:
;12f675-PwmFet.mpas,191 :: 		end;
L__main33:
;12f675-PwmFet.mpas,192 :: 		adc_vol:=ADC_Read(1);
0x00FB	0x3001      	MOVLW      1
0x00FC	0x00BC      	MOVWF      FARG_ADC_Read_channel
0x00FD	0x2075      	CALL       _ADC_Read
0x00FE	0x0850      	MOVF       R0, 0
0x00FF	0x00A5      	MOVWF      _adc_vol
0x0100	0x0851      	MOVF       R0+1, 0
0x0101	0x00A6      	MOVWF      _adc_vol+1
;12f675-PwmFet.mpas,193 :: 		if adc_vol>=VSE_HI then
0x0102	0x0824      	MOVF       _VSE_HI+1, 0
0x0103	0x0251      	SUBWF      R0+1, 0
0x0104	0x1D03      	BTFSS      STATUS, 2
0x0105	0x2908      	GOTO       L__main102
0x0106	0x0823      	MOVF       _VSE_HI, 0
0x0107	0x0250      	SUBWF      R0, 0
L__main102:
0x0108	0x1C03      	BTFSS      STATUS, 0
0x0109	0x290D      	GOTO       L__main39
;12f675-PwmFet.mpas,194 :: 		Sig_VSE:=1
0x010A	0x1283      	BCF        STATUS, 5
0x010B	0x1685      	BSF        GP5_bit, BitPos(GP5_bit+0)
0x010C	0x291A      	GOTO       L__main40
;12f675-PwmFet.mpas,195 :: 		else begin
L__main39:
;12f675-PwmFet.mpas,196 :: 		if VSE_CONN then
0x010D	0x082C      	MOVF       _VSE_CONN, 0
0x010E	0x1903      	BTFSC      STATUS, 2
0x010F	0x2913      	GOTO       L__main42
;12f675-PwmFet.mpas,197 :: 		Sig_VSE:=1
0x0110	0x1283      	BCF        STATUS, 5
0x0111	0x1685      	BSF        GP5_bit, BitPos(GP5_bit+0)
0x0112	0x2915      	GOTO       L__main43
;12f675-PwmFet.mpas,198 :: 		else
L__main42:
0x0113	0x1283      	BCF        STATUS, 5
;12f675-PwmFet.mpas,199 :: 		Sig_VSE:=0;
0x0114	0x1285      	BCF        GP5_bit, BitPos(GP5_bit+0)
L__main43:
;12f675-PwmFet.mpas,200 :: 		if VSE_LO_HIT<255 then
0x0115	0x30FF      	MOVLW      255
0x0116	0x0229      	SUBWF      _VSE_LO_HIT, 0
0x0117	0x1803      	BTFSC      STATUS, 0
0x0118	0x291A      	GOTO       L__main45
;12f675-PwmFet.mpas,201 :: 		Inc(VSE_LO_HIT);
0x0119	0x0AA9      	INCF       _VSE_LO_HIT, 1
L__main45:
;12f675-PwmFet.mpas,202 :: 		end;
L__main40:
;12f675-PwmFet.mpas,204 :: 		if (not out_short) and Delay1ms(ADC_Timer,1) then begin
0x011A	0x0937      	COMF       _out_short, 0
0x011B	0x00BB      	MOVWF      FLOC__main
0x011C	0x3032      	MOVLW      _ADC_Timer
0x011D	0x00BC      	MOVWF      FARG_Delay1ms_t
0x011E	0x3001      	MOVLW      1
0x011F	0x00BD      	MOVWF      FARG_Delay1ms_limit
0x0120	0x2048      	CALL       _Delay1ms
0x0121	0x083B      	MOVF       FLOC__main, 0
0x0122	0x05D0      	ANDWF      R0, 1
0x0123	0x1903      	BTFSC      STATUS, 2
0x0124	0x2978      	GOTO       L__main48
;12f675-PwmFet.mpas,205 :: 		adc_vol:=ADC_Read(1);
0x0125	0x3001      	MOVLW      1
0x0126	0x00BC      	MOVWF      FARG_ADC_Read_channel
0x0127	0x2075      	CALL       _ADC_Read
0x0128	0x0850      	MOVF       R0, 0
0x0129	0x00A5      	MOVWF      _adc_vol
0x012A	0x0851      	MOVF       R0+1, 0
0x012B	0x00A6      	MOVWF      _adc_vol+1
;12f675-PwmFet.mpas,206 :: 		if (VOL_PWM>PWM_LOW) and (adc_vol<cLow) and short_check then begin
0x012C	0x0836      	MOVF       _VOL_PWM, 0
0x012D	0x3C00      	SUBLW      0
0x012E	0x30FF      	MOVLW      255
0x012F	0x1803      	BTFSC      STATUS, 0
0x0130	0x3000      	MOVLW      0
0x0131	0x00D3      	MOVWF      R3
0x0132	0x3000      	MOVLW      0
0x0133	0x0251      	SUBWF      R0+1, 0
0x0134	0x1D03      	BTFSS      STATUS, 2
0x0135	0x2938      	GOTO       L__main103
0x0136	0x3011      	MOVLW      17
0x0137	0x0250      	SUBWF      R0, 0
L__main103:
0x0138	0x30FF      	MOVLW      255
0x0139	0x1803      	BTFSC      STATUS, 0
0x013A	0x3000      	MOVLW      0
0x013B	0x00D2      	MOVWF      R2
0x013C	0x0852      	MOVF       R2, 0
0x013D	0x0553      	ANDWF      R3, 0
0x013E	0x00D0      	MOVWF      R0
0x013F	0x0827      	MOVF       _short_check, 0
0x0140	0x05D0      	ANDWF      R0, 1
0x0141	0x1903      	BTFSC      STATUS, 2
0x0142	0x294B      	GOTO       L__main51
;12f675-PwmFet.mpas,207 :: 		VOL_PWM:=0;
0x0143	0x01B6      	CLRF       _VOL_PWM
;12f675-PwmFet.mpas,208 :: 		out_short:=True;
0x0144	0x30FF      	MOVLW      255
0x0145	0x00B7      	MOVWF      _out_short
;12f675-PwmFet.mpas,209 :: 		out_timer:=TICK_1000;
0x0146	0x0833      	MOVF       _TICK_1000, 0
0x0147	0x00A1      	MOVWF      _out_timer
;12f675-PwmFet.mpas,210 :: 		out_488:=10;         // 2 seconds
0x0148	0x300A      	MOVLW      10
0x0149	0x00A2      	MOVWF      _out_488
;12f675-PwmFet.mpas,211 :: 		end else begin
0x014A	0x2977      	GOTO       L__main52
L__main51:
;12f675-PwmFet.mpas,212 :: 		if adc_vol<vTarget then begin
0x014B	0x0830      	MOVF       _vTarget+1, 0
0x014C	0x0226      	SUBWF      _adc_vol+1, 0
0x014D	0x1D03      	BTFSS      STATUS, 2
0x014E	0x2951      	GOTO       L__main104
0x014F	0x082F      	MOVF       _vTarget, 0
0x0150	0x0225      	SUBWF      _adc_vol, 0
L__main104:
0x0151	0x1803      	BTFSC      STATUS, 0
0x0152	0x2959      	GOTO       L__main54
;12f675-PwmFet.mpas,213 :: 		if VOL_PWM<PWM_MAX then
0x0153	0x30FF      	MOVLW      255
0x0154	0x0236      	SUBWF      _VOL_PWM, 0
0x0155	0x1803      	BTFSC      STATUS, 0
0x0156	0x2958      	GOTO       L__main57
;12f675-PwmFet.mpas,214 :: 		Inc(VOL_PWM);
0x0157	0x0AB6      	INCF       _VOL_PWM, 1
L__main57:
;12f675-PwmFet.mpas,215 :: 		end else if adc_vol>vTarget then begin
0x0158	0x296A      	GOTO       L__main55
L__main54:
0x0159	0x0826      	MOVF       _adc_vol+1, 0
0x015A	0x0230      	SUBWF      _vTarget+1, 0
0x015B	0x1D03      	BTFSS      STATUS, 2
0x015C	0x295F      	GOTO       L__main105
0x015D	0x0825      	MOVF       _adc_vol, 0
0x015E	0x022F      	SUBWF      _vTarget, 0
L__main105:
0x015F	0x1803      	BTFSC      STATUS, 0
0x0160	0x296A      	GOTO       L__main60
;12f675-PwmFet.mpas,216 :: 		if VOL_PWM>0 then
0x0161	0x0836      	MOVF       _VOL_PWM, 0
0x0162	0x3C00      	SUBLW      0
0x0163	0x1803      	BTFSC      STATUS, 0
0x0164	0x2966      	GOTO       L__main63
;12f675-PwmFet.mpas,217 :: 		Dec(VOL_PWM);
0x0165	0x03B6      	DECF       _VOL_PWM, 1
L__main63:
;12f675-PwmFet.mpas,218 :: 		if VCharge=0 then
0x0166	0x1283      	BCF        STATUS, 5
0x0167	0x1A05      	BTFSC      GP4_bit, BitPos(GP4_bit+0)
0x0168	0x296A      	GOTO       L__main66
;12f675-PwmFet.mpas,219 :: 		VOL_PWM:=0;
0x0169	0x01B6      	CLRF       _VOL_PWM
L__main66:
;12f675-PwmFet.mpas,220 :: 		end;
L__main60:
L__main55:
;12f675-PwmFet.mpas,221 :: 		short_check:=Delay1ms(short_Timer,short_count);
0x016A	0x3031      	MOVLW      _short_Timer
0x016B	0x00BC      	MOVWF      FARG_Delay1ms_t
0x016C	0x0828      	MOVF       _short_count, 0
0x016D	0x00BD      	MOVWF      FARG_Delay1ms_limit
0x016E	0x2048      	CALL       _Delay1ms
0x016F	0x0850      	MOVF       R0, 0
0x0170	0x00A7      	MOVWF      _short_check
;12f675-PwmFet.mpas,222 :: 		if short_check then
0x0171	0x0850      	MOVF       R0, 0
0x0172	0x1903      	BTFSC      STATUS, 2
0x0173	0x2975      	GOTO       L__main69
;12f675-PwmFet.mpas,223 :: 		short_count:=0;
0x0174	0x01A8      	CLRF       _short_count
L__main69:
;12f675-PwmFet.mpas,224 :: 		LED1_tm:=240;
0x0175	0x30F0      	MOVLW      240
0x0176	0x00BA      	MOVWF      _LED1_tm
;12f675-PwmFet.mpas,225 :: 		end;
L__main52:
;12f675-PwmFet.mpas,226 :: 		end else
0x0177	0x2991      	GOTO       L__main49
L__main48:
;12f675-PwmFet.mpas,227 :: 		if out_short then begin
0x0178	0x0837      	MOVF       _out_short, 0
0x0179	0x1903      	BTFSC      STATUS, 2
0x017A	0x2991      	GOTO       L__main72
;12f675-PwmFet.mpas,228 :: 		Sig_VSE:=0;
0x017B	0x1283      	BCF        STATUS, 5
0x017C	0x1285      	BCF        GP5_bit, BitPos(GP5_bit+0)
;12f675-PwmFet.mpas,229 :: 		if Delay1ms(out_timer,100) then begin
0x017D	0x3021      	MOVLW      _out_timer
0x017E	0x00BC      	MOVWF      FARG_Delay1ms_t
0x017F	0x3064      	MOVLW      100
0x0180	0x00BD      	MOVWF      FARG_Delay1ms_limit
0x0181	0x2048      	CALL       _Delay1ms
0x0182	0x0850      	MOVF       R0, 0
0x0183	0x1903      	BTFSC      STATUS, 2
0x0184	0x2991      	GOTO       L__main75
;12f675-PwmFet.mpas,230 :: 		Dec(out_488);
0x0185	0x03A2      	DECF       _out_488, 1
;12f675-PwmFet.mpas,231 :: 		if out_488=0 then begin
0x0186	0x0822      	MOVF       _out_488, 0
0x0187	0x3A00      	XORLW      0
0x0188	0x1D03      	BTFSS      STATUS, 2
0x0189	0x2991      	GOTO       L__main78
;12f675-PwmFet.mpas,232 :: 		out_short:=False;
0x018A	0x01B7      	CLRF       _out_short
;12f675-PwmFet.mpas,233 :: 		short_Timer:=TICK_1000;
0x018B	0x0833      	MOVF       _TICK_1000, 0
0x018C	0x00B1      	MOVWF      _short_Timer
;12f675-PwmFet.mpas,234 :: 		short_count:=cShort_Recover;
0x018D	0x301C      	MOVLW      28
0x018E	0x00A8      	MOVWF      _short_count
;12f675-PwmFet.mpas,235 :: 		short_check:=False;
0x018F	0x01A7      	CLRF       _short_check
;12f675-PwmFet.mpas,236 :: 		VOL_PWM:=0;
0x0190	0x01B6      	CLRF       _VOL_PWM
;12f675-PwmFet.mpas,237 :: 		end;
L__main78:
;12f675-PwmFet.mpas,238 :: 		end;
L__main75:
;12f675-PwmFet.mpas,239 :: 		end;
L__main72:
L__main49:
;12f675-PwmFet.mpas,241 :: 		if (VOL_PWM=PWM_MAX) or (VOL_PWM=0) then begin
0x0191	0x0836      	MOVF       _VOL_PWM, 0
0x0192	0x3AFF      	XORLW      255
0x0193	0x30FF      	MOVLW      255
0x0194	0x1D03      	BTFSS      STATUS, 2
0x0195	0x3000      	MOVLW      0
0x0196	0x00D1      	MOVWF      R1
0x0197	0x0836      	MOVF       _VOL_PWM, 0
0x0198	0x3A00      	XORLW      0
0x0199	0x30FF      	MOVLW      255
0x019A	0x1D03      	BTFSS      STATUS, 2
0x019B	0x3000      	MOVLW      0
0x019C	0x00D0      	MOVWF      R0
0x019D	0x0851      	MOVF       R1, 0
0x019E	0x04D0      	IORWF      R0, 1
0x019F	0x1903      	BTFSC      STATUS, 2
0x01A0	0x29BB      	GOTO       L__main81
;12f675-PwmFet.mpas,242 :: 		if (VCharge=0) and (VOL_PWM=0) then begin
0x01A1	0x1283      	BCF        STATUS, 5
0x01A2	0x1A05      	BTFSC      GP4_bit, BitPos(GP4_bit+0)
0x01A3	0x29A6      	GOTO       L__main106
0x01A4	0x1454      	BSF        R4, 0
0x01A5	0x29A7      	GOTO       L__main107
L__main106:
0x01A6	0x1054      	BCF        R4, 0
L__main107:
0x01A7	0x0836      	MOVF       _VOL_PWM, 0
0x01A8	0x3A00      	XORLW      0
0x01A9	0x30FF      	MOVLW      255
0x01AA	0x1D03      	BTFSS      STATUS, 2
0x01AB	0x3000      	MOVLW      0
0x01AC	0x00D1      	MOVWF      R1
0x01AD	0x01D0      	CLRF       R0
0x01AE	0x1854      	BTFSC      R4, 0
0x01AF	0x0AD0      	INCF       R0, 1
0x01B0	0x0851      	MOVF       R1, 0
0x01B1	0x05D0      	ANDWF      R0, 1
0x01B2	0x1903      	BTFSC      STATUS, 2
0x01B3	0x29B9      	GOTO       L__main84
;12f675-PwmFet.mpas,243 :: 		LED_TMCount:=1;
0x01B4	0x3001      	MOVLW      1
0x01B5	0x00AA      	MOVWF      _LED_TMCount
;12f675-PwmFet.mpas,244 :: 		LED1_tm:=240;
0x01B6	0x30F0      	MOVLW      240
0x01B7	0x00BA      	MOVWF      _LED1_tm
;12f675-PwmFet.mpas,245 :: 		end else
0x01B8	0x29BB      	GOTO       L__main85
L__main84:
;12f675-PwmFet.mpas,246 :: 		LED1_tm:=128;
0x01B9	0x3080      	MOVLW      128
0x01BA	0x00BA      	MOVWF      _LED1_tm
L__main85:
;12f675-PwmFet.mpas,247 :: 		end;
L__main81:
;12f675-PwmFet.mpas,249 :: 		if not LED1_Toggle then begin
0x01BB	0x0938      	COMF       _LED1_Toggle, 0
0x01BC	0x00D0      	MOVWF      R0
0x01BD	0x1903      	BTFSC      STATUS, 2
0x01BE	0x29C3      	GOTO       L__main87
;12f675-PwmFet.mpas,250 :: 		LED1_Toggle:=True;
0x01BF	0x30FF      	MOVLW      255
0x01C0	0x00B8      	MOVWF      _LED1_Toggle
;12f675-PwmFet.mpas,251 :: 		LED1_Timer:=TICK_1000;
0x01C1	0x0833      	MOVF       _TICK_1000, 0
0x01C2	0x00AE      	MOVWF      _LED1_Timer
;12f675-PwmFet.mpas,252 :: 		end;
L__main87:
;12f675-PwmFet.mpas,253 :: 		if LED1_Toggle and Delay1ms(LED1_Timer,LED1_tm) then begin
0x01C3	0x302E      	MOVLW      _LED1_Timer
0x01C4	0x00BC      	MOVWF      FARG_Delay1ms_t
0x01C5	0x083A      	MOVF       _LED1_tm, 0
0x01C6	0x00BD      	MOVWF      FARG_Delay1ms_limit
0x01C7	0x2048      	CALL       _Delay1ms
0x01C8	0x0838      	MOVF       _LED1_Toggle, 0
0x01C9	0x05D0      	ANDWF      R0, 1
0x01CA	0x1903      	BTFSC      STATUS, 2
0x01CB	0x29D8      	GOTO       L__main90
;12f675-PwmFet.mpas,254 :: 		if LED_TMCount>0 then
0x01CC	0x082A      	MOVF       _LED_TMCount, 0
0x01CD	0x3C00      	SUBLW      0
0x01CE	0x1803      	BTFSC      STATUS, 0
0x01CF	0x29D1      	GOTO       L__main93
;12f675-PwmFet.mpas,255 :: 		Dec(LED_TMCount);
0x01D0	0x03AA      	DECF       _LED_TMCount, 1
L__main93:
;12f675-PwmFet.mpas,256 :: 		if LED_TMCount=0 then
0x01D1	0x082A      	MOVF       _LED_TMCount, 0
0x01D2	0x3A00      	XORLW      0
0x01D3	0x1D03      	BTFSS      STATUS, 2
0x01D4	0x29D8      	GOTO       L__main96
;12f675-PwmFet.mpas,257 :: 		LED1:=not LED1;
0x01D5	0x1283      	BCF        STATUS, 5
0x01D6	0x3004      	MOVLW      4
0x01D7	0x0685      	XORWF      GP2_bit, 1
L__main96:
;12f675-PwmFet.mpas,258 :: 		end;
L__main90:
;12f675-PwmFet.mpas,260 :: 		end;
0x01D8	0x28E5      	GOTO       L__main28
;12f675-PwmFet.mpas,261 :: 		end.
L_end_main:
0x01D9	0x29D9      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [50]    _Interrupt
0x0036       [6]    _Delay_22us
0x003C      [12]    _Delay_10ms
0x0048      [45]    _Delay1ms
0x0075      [42]    _ADC_Read
0x009F     [315]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0001       [1]    TMR0
0x0005       [0]    GP2_bit
0x0005       [0]    GP3_bit
0x0005       [0]    GP5_bit
0x0005       [0]    GP4_bit
0x0005       [0]    GP0_bit
0x0005       [0]    VCharge
0x0005       [0]    Sig_VSE
0x0005       [0]    VOut5
0x0005       [0]    LED1
0x0005       [0]    PWM_SIG
0x000B       [0]    GIE_bit
0x000B       [0]    PEIE_bit
0x000B       [0]    TMR0IE_bit
0x000B       [0]    T0IF_bit
0x000C       [0]    T1IF_bit
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [0]    TMR1ON_bit
0x0010       [0]    TMR1CS_bit
0x0019       [1]    CMCON
0x001E       [1]    ADRESH
0x001F       [1]    ADCON0
0x0021       [1]    _out_timer
0x0022       [1]    _out_488
0x0023       [2]    _VSE_HI
0x0025       [2]    _adc_vol
0x0027       [1]    _short_check
0x0028       [1]    _short_count
0x0029       [1]    _VSE_LO_HIT
0x002A       [1]    _LED_TMCount
0x002B       [1]    _VSE_Lo_Reset
0x002C       [1]    _VSE_CONN
0x002D       [1]    _VSE_Timer
0x002E       [1]    _LED1_Timer
0x002F       [2]    _vTarget
0x0031       [1]    _short_Timer
0x0032       [1]    _ADC_Timer
0x0033       [1]    _TICK_1000
0x0034       [1]    ___savePCLATH
0x0035       [1]    _ON_PWM
0x0036       [1]    _VOL_PWM
0x0037       [1]    _out_short
0x0038       [1]    _LED1_Toggle
0x0039       [1]    ___saveSTATUS
0x003A       [1]    _LED1_tm
0x003B       [1]    FLOC__main
0x003C       [1]    FARG_Delay1ms_t
0x003C       [1]    FARG_ADC_Read_channel
0x003D       [1]    FARG_Delay1ms_limit
0x003D       [2]    ADC_Read_local_result
0x0050       [1]    R0
0x0051       [1]    R1
0x0052       [1]    R2
0x0053       [1]    R3
0x0054       [1]    R4
0x0055       [1]    R5
0x0056       [1]    R6
0x0057       [1]    R7
0x0058       [1]    R8
0x0059       [1]    R9
0x005A       [1]    R10
0x005B       [1]    R11
0x005C       [1]    R12
0x005D       [1]    R13
0x005E       [1]    R14
0x005F       [1]    R15
0x0081       [1]    OPTION_REG
0x0085       [0]    TRISIO2_bit
0x0085       [0]    TRISIO0_bit
0x0085       [0]    TRISIO1_bit
0x0085       [0]    TRISIO5_bit
0x008C       [0]    TMR1IE_bit
0x0095       [0]    WPU4_bit
0x009E       [1]    ADRESL
0x009F       [1]    ANSEL
//** Label List: ** 
//----------------------------------------------
  L_end__Interrupt
  L__Interrupt1
  L__Interrupt2
  L__Interrupt3
  L__Interrupt4
  L__Interrupt5
  L__Interrupt6
  L__Interrupt7
  L__Interrupt8
  L__Interrupt9
  L__Interrupt10
  L__Interrupt11
  L__Interrupt12
  L_end__Delay1ms
  L__Delay1ms14
  L__Delay1ms15
  L__Delay1ms16
  L__Delay1ms17
  L__Delay1ms18
  L__Delay1ms19
  L__Delay1ms20
  L__Delay1ms21
  L__Delay1ms22
  L_end__main
  L__main24
  L__main25
  L__main26
  L__main27
  L__main28
  L__main29
  L__main30
  L__main31
  L__main32
  L__main33
  L__main34
  L__main35
  L__main36
  L__main37
  L__main38
  L__main39
  L__main40
  L__main41
  L__main42
  L__main43
  L__main44
  L__main45
  L__main46
  L__main47
  L__main48
  L__main49
  L__main50
  L__main51
  L__main52
  L__main53
  L__main54
  L__main55
  L__main56
  L__main57
  L__main58
  L__main59
  L__main60
  L__main61
  L__main62
  L__main63
  L__main64
  L__main65
  L__main66
  L__main67
  L__main68
  L__main69
  L__main70
  L__main71
  L__main72
  L__main73
  L__main74
  L__main75
  L__main76
  L__main77
  L__main78
  L__main79
  L__main80
  L__main81
  L__main82
  L__main83
  L__main84
  L__main85
  L__main86
  L__main87
  L__main88
  L__main89
  L__main90
  L__main91
  L__main92
  L__main93
  L__main94
  L__main95
  L__main96
  L__main97
  L_end_Interrupt
  _Interrupt
  L__Interrupt99
  L_end_Delay1ms
  _Delay1ms
  L_end_main
  _main
  L__main102
  L__main103
  L__main104
  L__main105
  L__main106
  L__main107
  L_end__ADC_Init
  L_end__ADC_Get_Sample
  L__ADC_Get_Sample2
  L__ADC_Get_Sample3
  L__ADC_Get_Sample4
  L__ADC_Get_Sample5
  L__ADC_Get_Sample6
  L_end__ADC_Read
  L__ADC_Read8
  L__ADC_Read9
  L__ADC_Read10
  L__ADC_Read11
  L__ADC_Read12
  L_end_ADC_Init
  _ADC_Init
  L_end_ADC_Get_Sample
  _ADC_Get_Sample
  L_end_ADC_Read
  _ADC_Read
  L_end__Get_Fosc_kHz
  L_end__Delay_1us
  L_end__Delay_10us
  L__Delay_10us3
  L_end__Delay_22us
  L__Delay_22us5
  L_end__Delay_50us
  L__Delay_50us7
  L_end__Delay_80us
  L__Delay_80us9
  L_end__Delay_500us
  L__Delay_500us11
  L_end__Delay_5500us
  L__Delay_5500us13
  L_end__Delay_1ms
  L__Delay_1ms15
  L_end__Delay_5ms
  L__Delay_5ms17
  L_end__Delay_8ms
  L__Delay_8ms19
  L_end__Delay_100ms
  L__Delay_100ms21
  L_end__Delay_10ms
  L__Delay_10ms23
  L_end__Delay_1sec
  L__Delay_1sec25
  L_end__Delay_Cyc
  L__Delay_Cyc27
  L__Delay_Cyc28
  L__Delay_Cyc29
  L__Delay_Cyc30
  L__Delay_Cyc31
  L_end__VDelay_ms
  L__VDelay_ms33
  L__VDelay_ms34
  L__VDelay_ms35
  L__VDelay_ms36
  L__VDelay_ms37
  L__VDelay_ms38
  L__VDelay_ms39
  L__VDelay_ms40
  L_end__VDelay_Advanced_ms
  L__VDelay_Advanced_ms42
  L__VDelay_Advanced_ms43
  L__VDelay_Advanced_ms44
  L__VDelay_Advanced_ms45
  L__VDelay_Advanced_ms46
  L__VDelay_Advanced_ms47
  L__VDelay_Advanced_ms48
  L__VDelay_Advanced_ms49
  L_end_Get_Fosc_kHz
  _Get_Fosc_kHz
  L_end_Delay_1us
  _Delay_1us
  L_end_Delay_10us
  _Delay_10us
  L_end_Delay_22us
  _Delay_22us
  L_end_Delay_50us
  _Delay_50us
  L_end_Delay_80us
  _Delay_80us
  L_end_Delay_500us
  _Delay_500us
  L_end_Delay_5500us
  _Delay_5500us
  L_end_Delay_1ms
  _Delay_1ms
  L_end_Delay_5ms
  _Delay_5ms
  L_end_Delay_8ms
  _Delay_8ms
  L_end_Delay_100ms
  _Delay_100ms
  L_end_Delay_10ms
  _Delay_10ms
  L_end_Delay_1sec
  _Delay_1sec
  L_end_Delay_Cyc
  _Delay_Cyc
  L_end_VDelay_ms
  _VDelay_ms
  L__VDelay_ms66
  L__VDelay_ms67
  L__VDelay_ms68
  L__VDelay_ms69
  L_end_VDelay_Advanced_ms
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms71
  L__VDelay_Advanced_ms72
  L__VDelay_Advanced_ms73
  L__VDelay_Advanced_ms74
  L_end__Interrupt
  L__Interrupt1
  L__Interrupt2
  L__Interrupt3
  L__Interrupt4
  L__Interrupt5
  L__Interrupt6
  L__Interrupt7
  L__Interrupt8
  L__Interrupt9
  L__Interrupt10
  L__Interrupt11
  L__Interrupt12
  L_end__Delay1ms
  L__Delay1ms14
  L__Delay1ms15
  L__Delay1ms16
  L__Delay1ms17
  L__Delay1ms18
  L__Delay1ms19
  L__Delay1ms20
  L__Delay1ms21
  L__Delay1ms22
  L_end__main
  L__main24
  L__main25
  L__main26
  L__main27
  L__main28
  L__main29
  L__main30
  L__main31
  L__main32
  L__main33
  L__main34
  L__main35
  L__main36
  L__main37
  L__main38
  L__main39
  L__main40
  L__main41
  L__main42
  L__main43
  L__main44
  L__main45
  L__main46
  L__main47
  L__main48
  L__main49
  L__main50
  L__main51
  L__main52
  L__main53
  L__main54
  L__main55
  L__main56
  L__main57
  L__main58
  L__main59
  L__main60
  L__main61
  L__main62
  L__main63
  L__main64
  L__main65
  L__main66
  L__main67
  L__main68
  L__main69
  L__main70
  L__main71
  L__main72
  L__main73
  L__main74
  L__main75
  L__main76
  L__main77
  L__main78
  L__main79
  L__main80
  L__main81
  L__main82
  L__main83
  L__main84
  L__main85
  L__main86
  L__main87
  L__main88
  L__main89
  L__main90
  L__main91
  L__main92
  L__main93
  L__main94
  L__main95
  L__main96
  L__main97
  L_end_Interrupt
  _Interrupt
  L__Interrupt99
  L_end_Delay1ms
  _Delay1ms
  L_end_main
  _main
  L__main102
  L__main103
  L__main104
  L__main105
  L__main106
  L__main107
